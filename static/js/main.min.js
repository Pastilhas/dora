"use strict"; let current_dir = ""; const getdir = async (t = "") => { let e = await fetch(`/getdir/${t}`); return e.ok ? await e.json() : (console.error(`Failed to list directory: ${e.status} ${e.statusText}`), null) }, chdir = ({ path: t, entries: e }) => {
    current_dir = t.slice(1), document.querySelector(".breadcrumbs").textContent = t; let r = document.querySelector(".pure-table tbody"); r.innerHTML = "", e.sort((t, e) => t.type < e.type ? -1 : t.type > e.type ? 1 : 0).forEach(t => {
        let e = document.createElement("tr"); e.innerHTML = `
                <td><a href="#" onclick="updateView('${t.name}', '${t.type}')">${t.name}</a></td>
                <td class="ta-center">${t.type || ""}</td>
                <td class="ta-right">${"directory" == t.type ? "" : t.size}</td>
                <td class="ta-center">${new Date(1e3 * (t.atime || 0)).toLocaleString()}</td>
                <td class="ta-center">${new Date(1e3 * (t.mtime || 0)).toLocaleString()}</td>
            `, r.appendChild(e)
    })
}, updateView = async (t = "", e = "") => { if ("directory" === e) { let r = `${current_dir}/${t}`, a = await getdir(r); a && chdir(a); return } console.log(`Opening file: ${t} of type: ${e}`) }; document.addEventListener("DOMContentLoaded", async () => { let t = await getdir(current_dir); t && chdir(t) });